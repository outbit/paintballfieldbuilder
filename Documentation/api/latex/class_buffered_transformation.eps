%!PS-Adobe-2.0 EPSF-2.0
%%Title: ClassName
%%Creator: Doxygen
%%CreationDate: Time
%%For: 
%Magnification: 1.00
%%Orientation: Portrait
%%BoundingBox: 0 0 500 90.7821
%%Pages: 0
%%BeginSetup
%%EndSetup
%%EndComments

% ----- variables -----

/boxwidth 0 def
/boxheight 40 def
/fontheight 24 def
/marginwidth 10 def
/distx 20 def
/disty 40 def
/boundaspect 5.50769 def  % aspect ratio of the BoundingBox (width/height)
/boundx 500 def
/boundy boundx boundaspect div def
/xspacing 0 def
/yspacing 0 def
/rows 13 def
/cols 8 def
/scalefactor 0 def
/boxfont /Times-Roman findfont fontheight scalefont def

% ----- procedures -----

/dotted { [1 4] 0 setdash } def
/dashed { [5] 0 setdash } def
/solid  { [] 0 setdash } def

/max % result = MAX(arg1,arg2)
{
  /a exch def
  /b exch def
  a b gt {a} {b} ifelse
} def

/xoffset % result = MAX(0,(scalefactor-(boxwidth*cols+distx*(cols-1)))/2)
{
  0 scalefactor boxwidth cols mul distx cols 1 sub mul add sub 2 div max
} def

/cw % boxwidth = MAX(boxwidth, stringwidth(arg1))
{
  /str exch def
  /boxwidth boxwidth str stringwidth pop max def
} def

/box % draws a box with text `arg1' at grid pos (arg2,arg3)
{ gsave
  2 setlinewidth
  newpath
  exch xspacing mul xoffset add
  exch yspacing mul
  moveto
  boxwidth 0 rlineto 
  0 boxheight rlineto 
  boxwidth neg 0 rlineto 
  0 boxheight neg rlineto 
  closepath
  dup stringwidth pop neg boxwidth add 2 div
  boxheight fontheight 2 div sub 2 div
  rmoveto show stroke
  grestore
} def  

/mark
{ newpath
  exch xspacing mul xoffset add boxwidth add
  exch yspacing mul
  moveto
  0 boxheight 4 div rlineto
  boxheight neg 4 div boxheight neg 4 div rlineto
  closepath
  eofill
  stroke
} def

/arrow
{ newpath
  moveto
  3 -8 rlineto
  -6 0 rlineto
  3 8 rlineto
  closepath
  eofill
  stroke
} def

/out % draws an output connector for the block at (arg1,arg2)
{
  newpath
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul boxheight add
  /y exch def
  /x exch def
  x y moveto
  0 disty 2 div rlineto 
  stroke
  1 eq { x y disty 2 div add arrow } if
} def

/in % draws an input connector for the block at (arg1,arg2)
{
  newpath
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul disty 2 div sub
  /y exch def
  /x exch def
  x y moveto
  0 disty 2 div rlineto
  stroke
  1 eq { x y disty 2 div add arrow } if
} def

/hedge
{
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul boxheight 2 div sub
  /y exch def
  /x exch def
  newpath
  x y moveto
  boxwidth 2 div distx add 0 rlineto
  stroke
  1 eq
  { newpath x boxwidth 2 div distx add add y moveto
    -8 3 rlineto
    0 -6 rlineto
    8 3 rlineto
    closepath
    eofill
    stroke
  } if
} def

/vedge
{
  /ye exch def
  /ys exch def
  /xs exch def
  newpath
  xs xspacing mul xoffset add boxwidth 2 div add dup
  ys yspacing mul boxheight 2 div sub
  moveto
  ye yspacing mul boxheight 2 div sub
  lineto
  stroke
} def

/conn % connections the blocks from col `arg1' to `arg2' of row `arg3'
{
  /ys exch def
  /xe exch def
  /xs exch def
  newpath
  xs xspacing mul xoffset add boxwidth 2 div add
  ys yspacing mul disty 2 div sub
  moveto
  xspacing xe xs sub mul 0
  rlineto
  stroke
} def

% ----- main ------

boxfont setfont
1 boundaspect scale
(BufferedTransformation) cw
(Algorithm) cw
(Waitable) cw
(Clonable) cw
(AutoSignaling< BufferedTransformation >) cw
(Bufferless< BufferedTransformation >) cw
(Filter) cw
(InputRejecting< BufferedTransformation >) cw
(Sink) cw
(MessageQueue) cw
(ByteQueue) cw
(AutoSignaling< Filter >) cw
(Bufferless< Filter >) cw
(CustomFlushPropagation< Filter >) cw
(EncodedObjectFilter) cw
(FilterWithBufferedInput) cw
(FilterWithInputQueue) cw
(InputRejecting< Filter >) cw
(LowFirstBitWriter) cw
(Unflushable< Filter >) cw
(AutoSignaling< InputRejecting< BufferedTransformation > >) cw
(ByteQueue::Walker) cw
(Bufferless< Sink >) cw
(CustomFlushPropagation< Sink >) cw
(FileSink) cw
/boxwidth boxwidth marginwidth 2 mul add def
/xspacing boxwidth distx add def
/yspacing boxheight disty add def
/scalefactor 
  boxwidth cols mul distx cols 1 sub mul add
  boxheight rows mul disty rows 1 sub mul add boundaspect mul 
  max def
boundx scalefactor div boundy scalefactor div scale

% ----- classes -----

 (BufferedTransformation) 2 10 box
 (Algorithm) 1.5 11 box
 (Waitable) 2.5 11 box
 (Clonable) 1.5 12 box
 (AutoSignaling< BufferedTransformation >) 0 9 box
 (Bufferless< BufferedTransformation >) 1 9 box
 (Filter) 2 9 box
 (InputRejecting< BufferedTransformation >) 4 9 box
 (Sink) 6 9 box
 (MessageQueue) 0 8 box
 (ByteQueue) 1 8 box
1 8 mark
 (AutoSignaling< Filter >) 3 8 box
3 8 mark
 (Bufferless< Filter >) 3 7 box
3 7 mark
 (CustomFlushPropagation< Filter >) 3 6 box
3 6 mark
 (EncodedObjectFilter) 3 5 box
 (FilterWithBufferedInput) 3 4 box
3 4 mark
 (FilterWithInputQueue) 3 3 box
 (InputRejecting< Filter >) 3 2 box
3 2 mark
 (LowFirstBitWriter) 3 1 box
3 1 mark
 (Unflushable< Filter >) 3 0 box
3 0 mark
 (AutoSignaling< InputRejecting< BufferedTransformation > >) 5 8 box
5 8 mark
 (ByteQueue::Walker) 5 7 box
 (Bufferless< Sink >) 7 8 box
7 8 mark
 (CustomFlushPropagation< Sink >) 7 7 box
7 7 mark
 (FileSink) 7 6 box

% ----- relations -----

solid
0 2 10 out
solid
1.5 2.5 11 conn
solid
1 1.5 11 in
solid
0 1.5 11 out
solid
1 2.5 11 in
solid
1 1.5 12 in
solid
1 2 9.25 out
solid
0 6 10 conn
solid
0 0 9.75 in
solid
1 0 8.25 out
solid
0 1 9.75 in
solid
1 1 8.25 out
solid
0 2 9.75 in
solid
1 2 8.25 out
solid
0 4 9.75 in
solid
1 4 8.25 out
solid
0 6 9.75 in
solid
1 6 8.25 out
solid
0 0 8.75 in
solid
0 1 8.75 in
solid
0 2 8.5 hedge
solid
0 2 7.5 hedge
solid
0 2 6.5 hedge
solid
0 2 5.5 hedge
solid
0 2 4.5 hedge
solid
0 2 3.5 hedge
solid
0 2 2.5 hedge
solid
0 2 1.5 hedge
solid
0 2 0.5 hedge
solid
2 9 0.5 vedge
solid
0 4 8.5 hedge
solid
0 4 7.5 hedge
solid
4 9 7.5 vedge
solid
0 6 8.5 hedge
solid
0 6 7.5 hedge
solid
0 6 6.5 hedge
solid
6 9 6.5 vedge
