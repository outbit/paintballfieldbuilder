%!PS-Adobe-2.0 EPSF-2.0
%%Title: ClassName
%%Creator: Doxygen
%%CreationDate: Time
%%For: 
%Magnification: 1.00
%%Orientation: Portrait
%%BoundingBox: 0 0 500 1000
%%Pages: 0
%%BeginSetup
%%EndSetup
%%EndComments

% ----- variables -----

/boxwidth 0 def
/boxheight 40 def
/fontheight 24 def
/marginwidth 10 def
/distx 20 def
/disty 40 def
/boundaspect 0.5 def  % aspect ratio of the BoundingBox (width/height)
/boundx 500 def
/boundy boundx boundaspect div def
/xspacing 0 def
/yspacing 0 def
/rows 33 def
/cols 2 def
/scalefactor 0 def
/boxfont /Times-Roman findfont fontheight scalefont def

% ----- procedures -----

/dotted { [1 4] 0 setdash } def
/dashed { [5] 0 setdash } def
/solid  { [] 0 setdash } def

/max % result = MAX(arg1,arg2)
{
  /a exch def
  /b exch def
  a b gt {a} {b} ifelse
} def

/xoffset % result = MAX(0,(scalefactor-(boxwidth*cols+distx*(cols-1)))/2)
{
  0 scalefactor boxwidth cols mul distx cols 1 sub mul add sub 2 div max
} def

/cw % boxwidth = MAX(boxwidth, stringwidth(arg1))
{
  /str exch def
  /boxwidth boxwidth str stringwidth pop max def
} def

/box % draws a box with text `arg1' at grid pos (arg2,arg3)
{ gsave
  2 setlinewidth
  newpath
  exch xspacing mul xoffset add
  exch yspacing mul
  moveto
  boxwidth 0 rlineto 
  0 boxheight rlineto 
  boxwidth neg 0 rlineto 
  0 boxheight neg rlineto 
  closepath
  dup stringwidth pop neg boxwidth add 2 div
  boxheight fontheight 2 div sub 2 div
  rmoveto show stroke
  grestore
} def  

/mark
{ newpath
  exch xspacing mul xoffset add boxwidth add
  exch yspacing mul
  moveto
  0 boxheight 4 div rlineto
  boxheight neg 4 div boxheight neg 4 div rlineto
  closepath
  eofill
  stroke
} def

/arrow
{ newpath
  moveto
  3 -8 rlineto
  -6 0 rlineto
  3 8 rlineto
  closepath
  eofill
  stroke
} def

/out % draws an output connector for the block at (arg1,arg2)
{
  newpath
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul boxheight add
  /y exch def
  /x exch def
  x y moveto
  0 disty 2 div rlineto 
  stroke
  1 eq { x y disty 2 div add arrow } if
} def

/in % draws an input connector for the block at (arg1,arg2)
{
  newpath
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul disty 2 div sub
  /y exch def
  /x exch def
  x y moveto
  0 disty 2 div rlineto
  stroke
  1 eq { x y disty 2 div add arrow } if
} def

/hedge
{
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul boxheight 2 div sub
  /y exch def
  /x exch def
  newpath
  x y moveto
  boxwidth 2 div distx add 0 rlineto
  stroke
  1 eq
  { newpath x boxwidth 2 div distx add add y moveto
    -8 3 rlineto
    0 -6 rlineto
    8 3 rlineto
    closepath
    eofill
    stroke
  } if
} def

/vedge
{
  /ye exch def
  /ys exch def
  /xs exch def
  newpath
  xs xspacing mul xoffset add boxwidth 2 div add dup
  ys yspacing mul boxheight 2 div sub
  moveto
  ye yspacing mul boxheight 2 div sub
  lineto
  stroke
} def

/conn % connections the blocks from col `arg1' to `arg2' of row `arg3'
{
  /ys exch def
  /xe exch def
  /xs exch def
  newpath
  xs xspacing mul xoffset add boxwidth 2 div add
  ys yspacing mul disty 2 div sub
  moveto
  xspacing xe xs sub mul 0
  rlineto
  stroke
} def

% ----- main ------

boxfont setfont
1 boundaspect scale
(BlockTransformation) cw
(Algorithm) cw
(Clonable) cw
(BlockCipher) cw
(SAFER::Base) cw
(SimpleKeyingInterfaceImpl< BlockCipher, BTEA_Info >) cw
(TwoBases< BlockCipher, Blowfish_Info >) cw
(TwoBases< BlockCipher, Camellia_Info >) cw
(TwoBases< BlockCipher, CAST128_Info >) cw
(TwoBases< BlockCipher, CAST256_Info >) cw
(TwoBases< BlockCipher, DES_EDE2_Info >) cw
(TwoBases< BlockCipher, DES_EDE3_Info >) cw
(TwoBases< BlockCipher, DES_Info >) cw
(TwoBases< BlockCipher, DES_XEX3_Info >) cw
(TwoBases< BlockCipher, GOST_Info >) cw
(TwoBases< BlockCipher, IDEA_Info >) cw
(TwoBases< BlockCipher, LR_Info< T > >) cw
(TwoBases< BlockCipher, MARS_Info >) cw
(TwoBases< BlockCipher, MDC_Info< T > >) cw
(TwoBases< BlockCipher, RC2_Info >) cw
(TwoBases< BlockCipher, RC5_Info >) cw
(TwoBases< BlockCipher, RC6_Info >) cw
(TwoBases< BlockCipher, Rijndael_Info >) cw
(TwoBases< BlockCipher, SEED_Info >) cw
(TwoBases< BlockCipher, Serpent_Info >) cw
(TwoBases< BlockCipher, SHACAL2_Info >) cw
(TwoBases< BlockCipher, SHARK_Info >) cw
(TwoBases< BlockCipher, SKIPJACK_Info >) cw
(TwoBases< BlockCipher, Square_Info >) cw
(TwoBases< BlockCipher, TEA_Info >) cw
(TwoBases< BlockCipher, ThreeWay_Info >) cw
(TwoBases< BlockCipher, Twofish_Info >) cw
(TwoBases< BlockCipher, XTEA_Info >) cw
/boxwidth boxwidth marginwidth 2 mul add def
/xspacing boxwidth distx add def
/yspacing boxheight disty add def
/scalefactor 
  boxwidth cols mul distx cols 1 sub mul add
  boxheight rows mul disty rows 1 sub mul add boundaspect mul 
  max def
boundx scalefactor div boundy scalefactor div scale

% ----- classes -----

 (BlockTransformation) 0 30 box
 (Algorithm) 0 31 box
 (Clonable) 0 32 box
 (BlockCipher) 0 29 box
 (SAFER::Base) 1 28 box
1 28 mark
 (SimpleKeyingInterfaceImpl< BlockCipher, BTEA_Info >) 1 27 box
1 27 mark
 (TwoBases< BlockCipher, Blowfish_Info >) 1 26 box
1 26 mark
 (TwoBases< BlockCipher, Camellia_Info >) 1 25 box
1 25 mark
 (TwoBases< BlockCipher, CAST128_Info >) 1 24 box
1 24 mark
 (TwoBases< BlockCipher, CAST256_Info >) 1 23 box
1 23 mark
 (TwoBases< BlockCipher, DES_EDE2_Info >) 1 22 box
1 22 mark
 (TwoBases< BlockCipher, DES_EDE3_Info >) 1 21 box
1 21 mark
 (TwoBases< BlockCipher, DES_Info >) 1 20 box
1 20 mark
 (TwoBases< BlockCipher, DES_XEX3_Info >) 1 19 box
1 19 mark
 (TwoBases< BlockCipher, GOST_Info >) 1 18 box
1 18 mark
 (TwoBases< BlockCipher, IDEA_Info >) 1 17 box
1 17 mark
 (TwoBases< BlockCipher, LR_Info< T > >) 1 16 box
1 16 mark
 (TwoBases< BlockCipher, MARS_Info >) 1 15 box
1 15 mark
 (TwoBases< BlockCipher, MDC_Info< T > >) 1 14 box
1 14 mark
 (TwoBases< BlockCipher, RC2_Info >) 1 13 box
1 13 mark
 (TwoBases< BlockCipher, RC5_Info >) 1 12 box
1 12 mark
 (TwoBases< BlockCipher, RC6_Info >) 1 11 box
1 11 mark
 (TwoBases< BlockCipher, Rijndael_Info >) 1 10 box
1 10 mark
 (TwoBases< BlockCipher, SEED_Info >) 1 9 box
1 9 mark
 (TwoBases< BlockCipher, Serpent_Info >) 1 8 box
1 8 mark
 (TwoBases< BlockCipher, SHACAL2_Info >) 1 7 box
1 7 mark
 (TwoBases< BlockCipher, SHARK_Info >) 1 6 box
1 6 mark
 (TwoBases< BlockCipher, SKIPJACK_Info >) 1 5 box
1 5 mark
 (TwoBases< BlockCipher, Square_Info >) 1 4 box
1 4 mark
 (TwoBases< BlockCipher, TEA_Info >) 1 3 box
1 3 mark
 (TwoBases< BlockCipher, ThreeWay_Info >) 1 2 box
1 2 mark
 (TwoBases< BlockCipher, Twofish_Info >) 1 1 box
1 1 mark
 (TwoBases< BlockCipher, XTEA_Info >) 1 0 box
1 0 mark

% ----- relations -----

solid
0 0 30 out
solid
1 0 31 in
solid
0 0 31 out
solid
1 0 32 in
solid
1 0 29.25 out
solid
0 0 29.75 in
solid
1 0 28.25 out
solid
0 0 28.5 hedge
solid
0 0 27.5 hedge
solid
0 0 26.5 hedge
solid
0 0 25.5 hedge
solid
0 0 24.5 hedge
solid
0 0 23.5 hedge
solid
0 0 22.5 hedge
solid
0 0 21.5 hedge
solid
0 0 20.5 hedge
solid
0 0 19.5 hedge
solid
0 0 18.5 hedge
solid
0 0 17.5 hedge
solid
0 0 16.5 hedge
solid
0 0 15.5 hedge
solid
0 0 14.5 hedge
solid
0 0 13.5 hedge
solid
0 0 12.5 hedge
solid
0 0 11.5 hedge
solid
0 0 10.5 hedge
solid
0 0 9.5 hedge
solid
0 0 8.5 hedge
solid
0 0 7.5 hedge
solid
0 0 6.5 hedge
solid
0 0 5.5 hedge
solid
0 0 4.5 hedge
solid
0 0 3.5 hedge
solid
0 0 2.5 hedge
solid
0 0 1.5 hedge
solid
0 0 0.5 hedge
solid
0 29 0.5 vedge
