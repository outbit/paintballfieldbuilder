%!PS-Adobe-2.0 EPSF-2.0
%%Title: ClassName
%%Creator: Doxygen
%%CreationDate: Time
%%For: 
%Magnification: 1.00
%%Orientation: Portrait
%%BoundingBox: 0 0 500 39.725
%%Pages: 0
%%BeginSetup
%%EndSetup
%%EndComments

% ----- variables -----

/boxwidth 0 def
/boxheight 40 def
/fontheight 24 def
/marginwidth 10 def
/distx 20 def
/disty 40 def
/boundaspect 12.5865 def  % aspect ratio of the BoundingBox (width/height)
/boundx 500 def
/boundy boundx boundaspect div def
/xspacing 0 def
/yspacing 0 def
/rows 13 def
/cols 11 def
/scalefactor 0 def
/boxfont /Times-Roman findfont fontheight scalefont def

% ----- procedures -----

/dotted { [1 4] 0 setdash } def
/dashed { [5] 0 setdash } def
/solid  { [] 0 setdash } def

/max % result = MAX(arg1,arg2)
{
  /a exch def
  /b exch def
  a b gt {a} {b} ifelse
} def

/xoffset % result = MAX(0,(scalefactor-(boxwidth*cols+distx*(cols-1)))/2)
{
  0 scalefactor boxwidth cols mul distx cols 1 sub mul add sub 2 div max
} def

/cw % boxwidth = MAX(boxwidth, stringwidth(arg1))
{
  /str exch def
  /boxwidth boxwidth str stringwidth pop max def
} def

/box % draws a box with text `arg1' at grid pos (arg2,arg3)
{ gsave
  2 setlinewidth
  newpath
  exch xspacing mul xoffset add
  exch yspacing mul
  moveto
  boxwidth 0 rlineto 
  0 boxheight rlineto 
  boxwidth neg 0 rlineto 
  0 boxheight neg rlineto 
  closepath
  dup stringwidth pop neg boxwidth add 2 div
  boxheight fontheight 2 div sub 2 div
  rmoveto show stroke
  grestore
} def  

/mark
{ newpath
  exch xspacing mul xoffset add boxwidth add
  exch yspacing mul
  moveto
  0 boxheight 4 div rlineto
  boxheight neg 4 div boxheight neg 4 div rlineto
  closepath
  eofill
  stroke
} def

/arrow
{ newpath
  moveto
  3 -8 rlineto
  -6 0 rlineto
  3 8 rlineto
  closepath
  eofill
  stroke
} def

/out % draws an output connector for the block at (arg1,arg2)
{
  newpath
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul boxheight add
  /y exch def
  /x exch def
  x y moveto
  0 disty 2 div rlineto 
  stroke
  1 eq { x y disty 2 div add arrow } if
} def

/in % draws an input connector for the block at (arg1,arg2)
{
  newpath
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul disty 2 div sub
  /y exch def
  /x exch def
  x y moveto
  0 disty 2 div rlineto
  stroke
  1 eq { x y disty 2 div add arrow } if
} def

/hedge
{
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul boxheight 2 div sub
  /y exch def
  /x exch def
  newpath
  x y moveto
  boxwidth 2 div distx add 0 rlineto
  stroke
  1 eq
  { newpath x boxwidth 2 div distx add add y moveto
    -8 3 rlineto
    0 -6 rlineto
    8 3 rlineto
    closepath
    eofill
    stroke
  } if
} def

/vedge
{
  /ye exch def
  /ys exch def
  /xs exch def
  newpath
  xs xspacing mul xoffset add boxwidth 2 div add dup
  ys yspacing mul boxheight 2 div sub
  moveto
  ye yspacing mul boxheight 2 div sub
  lineto
  stroke
} def

/conn % connections the blocks from col `arg1' to `arg2' of row `arg3'
{
  /ys exch def
  /xe exch def
  /xs exch def
  newpath
  xs xspacing mul xoffset add boxwidth 2 div add
  ys yspacing mul disty 2 div sub
  moveto
  xspacing xe xs sub mul 0
  rlineto
  stroke
} def

% ----- main ------

boxfont setfont
1 boundaspect scale
(Clonable) cw
(Algorithm) cw
(AsymmetricAlgorithm) cw
(BlockTransformation) cw
(BufferedTransformation) cw
(HashTransformation) cw
(RandomNumberGenerator) cw
(StreamTransformation) cw
(KeyAgreementAlgorithm) cw
(PrivateKeyAlgorithm) cw
(PublicKeyAlgorithm) cw
(BlockCipher) cw
(AutoSignaling< BufferedTransformation >) cw
(Bufferless< BufferedTransformation >) cw
(Filter) cw
(InputRejecting< BufferedTransformation >) cw
(Sink) cw
(Adler32) cw
(CRC32) cw
(IteratedHashBase< T_HashWordType, HashTransformation >) cw
(IteratedHashBase< word32, HashTransformation >) cw
(IteratedHashBase< word64, HashTransformation >) cw
(MessageAuthenticationCode) cw
(NullHash) cw
(PK_MessageAccumulator) cw
(TruncatedHashTemplate< T >) cw
(Weak1::MD2) cw
(AdditiveCipherTemplate< BASE >) cw
(AdditiveCipherTemplate< AbstractPolicyHolder< AdditiveCipherAbstractPolicy, CTR_ModePolicy > >) cw
(LC_RNG) cw
(PublicBlumBlumShub) cw
(RandomPool) cw
(Weak1::ARC4_Base) cw
(X917RNG) cw
(AuthenticatedSymmetricCipher) cw
(PublicBlumBlumShub) cw
(SymmetricCipher) cw
/boxwidth boxwidth marginwidth 2 mul add def
/xspacing boxwidth distx add def
/yspacing boxheight disty add def
/scalefactor 
  boxwidth cols mul distx cols 1 sub mul add
  boxheight rows mul disty rows 1 sub mul add boundaspect mul 
  max def
boundx scalefactor div boundy scalefactor div scale

% ----- classes -----

 (Clonable) 4 12 box
 (Algorithm) 4 11 box
 (AsymmetricAlgorithm) 0 10 box
 (BlockTransformation) 2 10 box
 (BufferedTransformation) 3 10 box
 (HashTransformation) 5 10 box
 (RandomNumberGenerator) 7 10 box
 (StreamTransformation) 9 10 box
 (KeyAgreementAlgorithm) 1 9 box
1 9 mark
 (PrivateKeyAlgorithm) 1 8 box
1 8 mark
 (PublicKeyAlgorithm) 1 7 box
1 7 mark
 (BlockCipher) 2 9 box
2 9 mark
 (AutoSignaling< BufferedTransformation >) 4 9 box
4 9 mark
 (Bufferless< BufferedTransformation >) 4 8 box
4 8 mark
 (Filter) 4 7 box
4 7 mark
 (InputRejecting< BufferedTransformation >) 4 6 box
4 6 mark
 (Sink) 4 5 box
4 5 mark
 (Adler32) 6 9 box
 (CRC32) 6 8 box
 (IteratedHashBase< T_HashWordType, HashTransformation >) 6 7 box
6 7 mark
 (IteratedHashBase< word32, HashTransformation >) 6 6 box
6 6 mark
 (IteratedHashBase< word64, HashTransformation >) 6 5 box
6 5 mark
 (MessageAuthenticationCode) 6 4 box
6 4 mark
 (NullHash) 6 3 box
 (PK_MessageAccumulator) 6 2 box
6 2 mark
 (TruncatedHashTemplate< T >) 6 1 box
 (Weak1::MD2) 6 0 box
 (AdditiveCipherTemplate< BASE >) 8 9 box
8 9 mark
 (AdditiveCipherTemplate< AbstractPolicyHolder< AdditiveCipherAbstractPolicy, CTR_ModePolicy > >) 8 8 box
 (LC_RNG) 8 7 box
 (PublicBlumBlumShub) 8 6 box
8 6 mark
 (RandomPool) 8 5 box
 (Weak1::ARC4_Base) 8 4 box
8 4 mark
 (X917RNG) 8 3 box
 (AuthenticatedSymmetricCipher) 10 9 box
10 9 mark
 (PublicBlumBlumShub) 10 8 box
10 8 mark
 (SymmetricCipher) 10 7 box
10 7 mark

% ----- relations -----

solid
1 4 11.25 out
solid
0 4 11.75 in
solid
1 4 10.25 out
solid
0 9 11 conn
solid
0 0 10.75 in
solid
1 0 9.25 out
solid
0 2 10.75 in
solid
1 2 9.25 out
solid
0 3 10.75 in
solid
1 3 9.25 out
solid
0 5 10.75 in
solid
1 5 9.25 out
solid
0 7 10.75 in
solid
1 7 9.25 out
solid
0 9 10.75 in
solid
1 9 9.25 out
solid
0 0 9.5 hedge
solid
0 0 8.5 hedge
solid
0 0 7.5 hedge
solid
0 10 7.5 vedge
solid
0 2 9.75 in
solid
0 3 9.5 hedge
solid
0 3 8.5 hedge
solid
0 3 7.5 hedge
solid
0 3 6.5 hedge
solid
0 3 5.5 hedge
solid
3 10 5.5 vedge
solid
0 5 9.5 hedge
solid
0 5 8.5 hedge
solid
0 5 7.5 hedge
solid
0 5 6.5 hedge
solid
0 5 5.5 hedge
solid
0 5 4.5 hedge
solid
0 5 3.5 hedge
solid
0 5 2.5 hedge
solid
0 5 1.5 hedge
solid
0 5 0.5 hedge
solid
5 10 0.5 vedge
solid
0 7 9.5 hedge
solid
0 7 8.5 hedge
solid
0 7 7.5 hedge
solid
0 7 6.5 hedge
solid
0 7 5.5 hedge
solid
0 7 4.5 hedge
solid
0 7 3.5 hedge
solid
7 10 3.5 vedge
solid
0 9 9.5 hedge
solid
0 9 8.5 hedge
solid
0 9 7.5 hedge
solid
9 10 7.5 vedge
